// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: queries.sql

package db

import (
	"context"
	"time"
)

const CreateDelegation = `-- name: CreateDelegation :one
INSERT INTO delegations (delegator, timestamp, amount, level)
VALUES ($1, $2, $3, $4)
RETURNING delegator, timestamp, amount, level
`

type CreateDelegationParams struct {
	Delegator string    `json:"delegator"`
	Timestamp time.Time `json:"timestamp"`
	Amount    int64     `json:"amount"`
	Level     int64     `json:"level"`
}

type CreateDelegationRow struct {
	Delegator string    `json:"delegator"`
	Timestamp time.Time `json:"timestamp"`
	Amount    int64     `json:"amount"`
	Level     int64     `json:"level"`
}

func (q *Queries) CreateDelegation(ctx context.Context, arg CreateDelegationParams) (*CreateDelegationRow, error) {
	row := q.db.QueryRow(ctx, CreateDelegation,
		arg.Delegator,
		arg.Timestamp,
		arg.Amount,
		arg.Level,
	)
	var i CreateDelegationRow
	err := row.Scan(
		&i.Delegator,
		&i.Timestamp,
		&i.Amount,
		&i.Level,
	)
	return &i, err
}
